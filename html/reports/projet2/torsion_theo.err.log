Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/asyncio/base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/Caskroom/miniconda/base/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from bokeh.io import output_notebook, show
from bokeh.plotting import figure
from bokeh.models import Slider, CustomJS, ColumnDataSource
import numpy as np

# CrÃ©ation du fichier HTML pour affichage sur le site
output_notebook(hide_banner=True)

# DonnÃ©es pour la courbe
theta_values_deg = np.linspace(0, 1, 10)  # Angle en degrÃ©s
theta_values_rad = np.radians(theta_values_deg)  # Conversion en radians
T_values = (theta_values_rad * G * J) / L  # Calcul du couple T(Î¸)

source_curve = ColumnDataSource(data=dict(x=theta_values_deg, y=T_values))  # Courbe
source_point = ColumnDataSource(data=dict(x=[0], y=[0]))  # Point mobile (bille)

# CrÃ©ation du graphique
p = figure(title="Ã‰volution du couple T en fonction de Î¸",
           x_axis_label="Angle de torsion Î¸ (Â°)",
           y_axis_label="Couple de torsion T (NÂ·m)",
           background_fill_color="#121212",
           border_fill_color="#121212",
           width=815, height=500)

# âœ… Mettre le texte en blanc (titre, axes, Ã©tiquettes)
p.title.text_color = "white"
p.xaxis.axis_label_text_color = "white"
p.yaxis.axis_label_text_color = "white"
p.xaxis.major_label_text_color = "white"
p.yaxis.major_label_text_color = "white"

# TracÃ© de la courbe T(Î¸)
p.line("x", "y", source=source_curve, line_width=2, color="cyan", legend_label="T(Î¸)")

# Ajout de l'asymptote T_max
p.line([0, 1], [T_max, T_max], line_width=2, line_dash="dashed", color="magenta", legend_label="T_max")

# Ajout de la bille mobile
p.scatter("x", "y", source=source_point, size=10, color="white", legend_label="Point Mobile")

# âœ… DÃ©placer la lÃ©gende en haut Ã  gauche
p.legend.location = "top_left"
p.legend.label_text_color = "white"
p.legend.background_fill_color = "#1e1e1e"
p.legend.border_line_color = "white"

# Curseur interactif
slider = Slider(start=0, end=1, value=0, step=0.01, title="Î¸ (Â°)")

# Ajout d'un widget texte pour afficher la valeur de T(Î¸)
T_value_text = Div(
    text=f"<b>T(Î¸) = {0:.4f} NÂ·m</b>",
    styles={"color": "white", "font-size": "16px", "background-color": "#121212", "padding": "5px"}
)


# Callback JavaScript pour mettre Ã  jour le graphique et la valeur de T(Î¸)
callback = CustomJS(args=dict(source_point=source_point, slider=slider, G=G, J=J, L=L, T_text=T_value_text), code="""
    var theta_deg = slider.value;
    var theta_rad = theta_deg * Math.PI / 180;
    var new_T = theta_rad * G * J / L;

    source_point.data['x'] = [theta_deg];  // Mise Ã  jour X
    source_point.data['y'] = [new_T];  // Mise Ã  jour Y
    source_point.change.emit();

    // Mise Ã  jour du texte
    T_text.text = "<b>T(Î¸) = " + new_T.toFixed(4) + " NÂ·m</b>";
""")

slider.js_on_change("value", callback)

# Disposition des Ã©lÃ©ments
layout = column(p, slider, T_value_text)
show(layout)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[15], line 51[0m
[1;32m     48[0m slider [38;5;241m=[39m Slider(start[38;5;241m=[39m[38;5;241m0[39m, end[38;5;241m=[39m[38;5;241m1[39m, value[38;5;241m=[39m[38;5;241m0[39m, step[38;5;241m=[39m[38;5;241m0.01[39m, title[38;5;241m=[39m[38;5;124m"[39m[38;5;124mÎ¸ (Â°)[39m[38;5;124m"[39m)
[1;32m     50[0m [38;5;66;03m# Ajout d'un widget texte pour afficher la valeur de T(Î¸)[39;00m
[0;32m---> 51[0m T_value_text [38;5;241m=[39m [43mDiv[49m(
[1;32m     52[0m     text[38;5;241m=[39m[38;5;124mf[39m[38;5;124m"[39m[38;5;124m<b>T(Î¸) = [39m[38;5;132;01m{[39;00m[38;5;241m0[39m[38;5;132;01m:[39;00m[38;5;124m.4f[39m[38;5;132;01m}[39;00m[38;5;124m NÂ·m</b>[39m[38;5;124m"[39m,
[1;32m     53[0m     styles[38;5;241m=[39m{[38;5;124m"[39m[38;5;124mcolor[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124mwhite[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mfont-size[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124m16px[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mbackground-color[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124m#121212[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mpadding[39m[38;5;124m"[39m: [38;5;124m"[39m[38;5;124m5px[39m[38;5;124m"[39m}
[1;32m     54[0m )
[1;32m     57[0m [38;5;66;03m# Callback JavaScript pour mettre Ã  jour le graphique et la valeur de T(Î¸)[39;00m
[1;32m     58[0m callback [38;5;241m=[39m CustomJS(args[38;5;241m=[39m[38;5;28mdict[39m(source_point[38;5;241m=[39msource_point, slider[38;5;241m=[39mslider, G[38;5;241m=[39mG, J[38;5;241m=[39mJ, L[38;5;241m=[39mL, T_text[38;5;241m=[39mT_value_text), code[38;5;241m=[39m[38;5;124m"""[39m
[1;32m     59[0m [38;5;124m    var theta_deg = slider.value;[39m
[1;32m     60[0m [38;5;124m    var theta_rad = theta_deg * Math.PI / 180;[39m
[0;32m   (...)[0m
[1;32m     68[0m [38;5;124m    T_text.text = [39m[38;5;124m"[39m[38;5;124m<b>T(Î¸) = [39m[38;5;124m"[39m[38;5;124m + new_T.toFixed(4) + [39m[38;5;124m"[39m[38;5;124m NÂ·m</b>[39m[38;5;124m"[39m[38;5;124m;[39m
[1;32m     69[0m [38;5;124m"""[39m)

[0;31mNameError[0m: name 'Div' is not defined

